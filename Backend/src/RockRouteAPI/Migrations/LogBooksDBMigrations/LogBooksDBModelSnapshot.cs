// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace RockRouteAPI.Migrations.LogBooksDBMigrations
{
    [DbContext(typeof(LogBooksDB))]
    partial class LogBooksDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RockRoute.Models.LogBook", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RouteId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("LogBook");
                });

            modelBuilder.Entity("RockRoute.Models.LogBook", b =>
                {
                    b.OwnsMany("RockRoute.Classes.Activity", "Activity", b1 =>
                        {
                            b1.Property<string>("LogBookUserId")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Notes")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("LogBookUserId", "Id");

                            b1.ToTable("Activity");

                            b1.WithOwner()
                                .HasForeignKey("LogBookUserId");
                        });

                    b.OwnsMany("RockRoute.Classes.CRoute", "Route", b1 =>
                        {
                            b1.Property<string>("LogBookUserId")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int?>("Attempts")
                                .HasColumnType("integer");

                            b1.Property<DateTime?>("CompletedDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<bool?>("IsOnSite")
                                .HasColumnType("boolean");

                            b1.Property<string>("Notes")
                                .HasColumnType("text");

                            b1.PrimitiveCollection<List<string>>("PartnerID")
                                .HasColumnType("text[]");

                            b1.Property<string>("RouteID")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("LogBookUserId", "Id");

                            b1.ToTable("CRoute");

                            b1.WithOwner()
                                .HasForeignKey("LogBookUserId");
                        });

                    b.OwnsMany("RockRoute.Classes.Playlist", "Playlist", b1 =>
                        {
                            b1.Property<string>("LogBookUserId")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.PrimitiveCollection<List<string>>("CollabID")
                                .HasColumnType("text[]");

                            b1.Property<string>("CreatorID")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.PrimitiveCollection<List<string>>("ListOfRoute_ID")
                                .HasColumnType("text[]");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PlaylistPicture")
                                .HasColumnType("text");

                            b1.HasKey("LogBookUserId", "Id");

                            b1.ToTable("Playlist");

                            b1.WithOwner()
                                .HasForeignKey("LogBookUserId");
                        });

                    b.Navigation("Activity");

                    b.Navigation("Playlist");

                    b.Navigation("Route");
                });
#pragma warning restore 612, 618
        }
    }
}
