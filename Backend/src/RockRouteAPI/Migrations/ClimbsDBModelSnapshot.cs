// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RockRoute.Models;

#nullable disable

namespace RockRouteAPI.Migrations
{
    [DbContext(typeof(ClimbsDB))]
    partial class ClimbsDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RockRoute.Models.Climb", b =>
                {
                    b.Property<string>("RouteId")
                        .HasColumnType("text");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentSector")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Protection_Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SectorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("YDS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RouteId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("RockRoute.Models.Climb", b =>
                {
                    b.OwnsMany("RockRoute.Classes.CRating", "UserRatings", b1 =>
                        {
                            b1.Property<string>("ClimbRouteId")
                                .HasColumnType("text");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("Rating")
                                .HasColumnType("integer");

                            b1.Property<string>("UserID")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ClimbRouteId", "Id");

                            b1.ToTable("CRating");

                            b1.WithOwner()
                                .HasForeignKey("ClimbRouteId");
                        });

                    b.OwnsOne("RockRoute.Classes.Location", "ParentLocation", b1 =>
                        {
                            b1.Property<string>("ClimbRouteId")
                                .HasColumnType("text");

                            b1.Property<double>("Lat")
                                .HasColumnType("double precision");

                            b1.Property<double>("Long")
                                .HasColumnType("double precision");

                            b1.HasKey("ClimbRouteId");

                            b1.ToTable("Entries");

                            b1.WithOwner()
                                .HasForeignKey("ClimbRouteId");
                        });

                    b.Navigation("ParentLocation")
                        .IsRequired();

                    b.Navigation("UserRatings");
                });
#pragma warning restore 612, 618
        }
    }
}
